version: 2.1

commands:
  cached-checkout:
    description: "checkout with caching"
    steps:
      - restore_cache:
          name: Restore Git Cache
          keys:
            - git-{{ .Branch }}-{{ .Revision }}
            - git-{{ .Branch }}-
            - git-
      - checkout:
          name: Check Out Code
      - run:
          name: Fetch from Git
          command: |
            git fetch origin
            git config user.name 'CircleCI Automated Commit'
            git config user.email 'github@raccoonfink.com'
      - save_cache:
          name: Save Git Cache
          key: git-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
  generate-changelog:
    steps:
      - run:
          name: Generate Change Log
          command: npm run changelog
  cached-npm-install:
    description: run "npm ci", updating cache
    steps:
      - restore_cache:
          name: Restore Package Cache
          keys:
            - npm-packages-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - npm-packages-v2-{{ .Branch }}
            - npm-packages-v2-
      - run:
          name: Clean Old Cache Entries
          command: |
            if [ -d ~/.npm ]; then
              find ~/.npm -maxdepth 2 -type d -ctime +14 -exec rm -rf {} \;
            fi
      - run:
          name: Install Node Dependencies
          command: npm --prefer-offline --no-progress ci
      - save_cache:
          name: Save Package Cache
          key: npm-packages-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

jobs:
  run-tests:
    resource_class: large
    docker:
      - image: cimg/node:lts-browsers
        environment:
          TZ: "America/New_York"
    steps:
      - cached-checkout
      - cached-npm-install
      - run:
          name: Run Tests
          command: |
            export HUSKY=0
            npm run build-release
            npm run test
  merge-main:
    docker:
      - image: cimg/node:lts-browsers
        environment:
          TZ: "America/New_York"
    steps:
      - cached-checkout
      - run:
          name: Merge Develop to Main
          command: |
            export HUSKY=0
            git checkout main
            git fetch --all
            git reset --hard origin/main
            git merge -m 'automated merge from develop -> main' "<< pipeline.git.revision >>"
      - cached-npm-install
      - run:
          name: Build Artifacts
          command: npm --prefer-offline --no-progress run build-release
      - generate-changelog
      - run:
          name: Commit and Push Updated Artifacts
          command: |
            export HUSKY=0
            git add -A
            if [ `git diff HEAD | wc -l` -gt 0 ]; then
              echo "code detected; committing updated dist/"
              git commit --no-verify -m 'chore: automated generation of dist/'
            fi
            git push origin main:main

workflows:
  run-tests:
    jobs:
      - run-tests:
          filters:
            branches:
              ignore:
                - develop
  run-tests-and-deploy:
    jobs:
      - run-tests:
          filters:
            branches:
              only:
                - develop
      - merge-main:
          requires:
            - run-tests
          filters:
            branches:
              only:
                - develop
