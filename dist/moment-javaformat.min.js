!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("moment-timezone"));else if("function"==typeof define&&define.amd)define(["moment-timezone"],t);else{var r="object"==typeof exports?t(require("moment-timezone")):t(e["moment-timezone"]);for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,(function(e){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Formatter=t.Token=t.zeroPad=t.toAbsString=t.getZoneForDateTime=t.getDescriptionForAbbreviation=t.findAbbreviationForOffset=void 0;var n=r(3);function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var T={},u=function(e){var t=moment.tz.guess(),r=t?moment.tz(t).format("z"):null,a=n.offsets[String(e)];return a?a.indexOf(r)>=0?r:a[0]:null};t.findAbbreviationForOffset=u;t.getDescriptionForAbbreviation=function(e){return n.abbreviations[e]?n.abbreviations[e]:null};t.getZoneForDateTime=function(e){var t=moment(e).utcOffset();if(!T[t]){var r=u(t);r?T[t]=r:console.warn("- unhandled offset: "+t)}return T[t]||null};var m=function(e){return Number.isInteger(e)?String(Math.abs(e)):e.replace(/^-/,"")};t.toAbsString=m;t.zeroPad=function(e,t){var r=m(e);return r.length>=t?String(e):(r!==e?"-":"")+("0".repeat(t)+r).substr(0-t)};var f=function(){function e(t,r){if(a(this,e),o(this,"token",void 0),o(this,"count",0),1!=t.length)throw new Error("You must provide a single character when creating a token!");this.token=t,this.count=void 0===r?1:r}var t,r,n;return t=e,(r=[{key:"increment",value:function(){return this.count++,this.count}},{key:"equals",value:function(e){return this.token===e.token&&this.count===e.count}},{key:"toString",value:function(){return this.token.repeat(this.count)}}])&&i(t.prototype,r),n&&i(t,n),e}();t.Token=f;t.Formatter=function e(){a(this,e)}},function(e,t,r){"use strict";var n,a,i;Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"SimpleDateFormat",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(t,"DateTimeFormatter",{enumerable:!0,get:function(){return T.default}}),t.default=void 0;var o=u(r(2)),T=u(r(4));function u(e){return e&&e.__esModule?e:{default:e}}var m,f=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(e.tz){console.log("Moment.js with timezone support detected; attaching Java format methods.");var r=new o.default,n=new T.default;return e.fn.formatJavaSDF=function(e){return r.format(this,e)},e.fn.formatJavaDTF=function(e){return n.format(this,e)},!0}if(console.error("Unable to attach Java format methods.  Moment.js object was invalid or missing timezone support."),t)throw new Error("Moment.js object was invalid or missing timezone support.");return!1};m=function(e){return f(e,!1),f?e:f},a=[r(5)],void 0===(i="function"==typeof(n=m)?n.apply(t,a):n)||(e.exports=i);var l={register:f};t.default=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(0);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function T(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=/[A-Za-z]/,l=function(e){return e.year()>0?"AD":"BC"},s={G:l,GG:l,GGG:l,GGGG:l,y:function(e){return(0,n.toAbsString)(e.format("Y"))},yy:function(e){return(0,n.toAbsString)(e.format("YY"))},yyy:function(e){return(0,n.zeroPad)((0,n.toAbsString)(e.format("YYYY")),3)},yyyy:function(e){return(0,n.toAbsString)(e.format("YYYY"))},Y:"gggg",YY:"gg",YYY:function(e){return(0,n.zeroPad)(e.format("gggg"),3)},YYYY:"gggg",M:"M",MM:"MM",MMM:"MMM",MMMM:"MMMM",w:function(e){return(0,n.zeroPad)(e.format("w"),1)},ww:function(e){return(0,n.zeroPad)(e.format("w"),2)},www:function(e){return(0,n.zeroPad)(e.format("w"),3)},wwww:function(e){return(0,n.zeroPad)(e.format("w"),4)},W:null,WW:null,WWW:null,WWWW:null,D:"DDD",DD:function(e){return(0,n.zeroPad)(e.format("DDD"),2)},DDD:function(e){return(0,n.zeroPad)(e.format("DDD"),3)},DDDD:function(e){return(0,n.zeroPad)(e.format("DDD"),4)},d:"D",dd:"DD",ddd:function(e){return(0,n.zeroPad)(e.format("D"),3)},dddd:function(e){return(0,n.zeroPad)(e.format("D"),4)},F:null,FF:null,FFF:null,FFFF:null,E:"ddd",EE:"ddd",EEE:"ddd",EEEE:"dddd",u:"E",uu:function(e){return(0,n.zeroPad)(e.format("E"),2)},uuu:function(e){return(0,n.zeroPad)(e.format("E"),3)},uuuu:function(e){return(0,n.zeroPad)(e.format("E"),4)},a:"A",aa:"A",aaa:"A",aaaa:"A",H:"H",HH:"HH",HHH:function(e){return(0,n.zeroPad)(e.format("H"),3)},HHHH:function(e){return(0,n.zeroPad)(e.format("H"),4)},k:"k",kk:"kk",kkk:function(e){return(0,n.zeroPad)(e.format("k"),3)},kkkk:function(e){return(0,n.zeroPad)(e.format("k"),4)},K:function(e){var t=parseInt(e.format("h"),10);return(0,n.toAbsString)(t%12)},KK:function(e){var t=parseInt(e.format("h"),10);return(0,n.zeroPad)((0,n.toAbsString)(t%12),2)},KKK:function(e){var t=parseInt(e.format("h"),10);return(0,n.zeroPad)((0,n.toAbsString)(t%12),3)},KKKK:function(e){var t=parseInt(e.format("h"),10);return(0,n.zeroPad)((0,n.toAbsString)(t%12),4)},h:"h",hh:"hh",hhh:function(e){return(0,n.zeroPad)(e.format("h"),3)},hhhh:function(e){return(0,n.zeroPad)(e.format("h"),4)},m:"m",mm:"mm",mmm:function(e){return(0,n.zeroPad)(e.format("m"),3)},mmmm:function(e){return(0,n.zeroPad)(e.format("m"),4)},s:"s",ss:"ss",sss:function(e){return(0,n.zeroPad)(e.format("s"),3)},ssss:function(e){return(0,n.zeroPad)(e.format("s"),4)},S:"S",SS:"SS",SSS:"SSS",SSSS:"SSSS",z:function(e){var t=(0,n.getZoneForDateTime)(e);return t||e.zoneAbbr()},zz:function(e){var t=(0,n.getZoneForDateTime)(e);return t||e.zoneAbbr()},zzz:function(e){var t=(0,n.getZoneForDateTime)(e);return t||e.zoneAbbr()},zzzz:function(e){var t=(0,n.getZoneForDateTime)(e);if(t){var r=(0,n.getDescriptionForAbbreviation)(t);if(r)return r;var a=e.clone().tz(t).zoneName();if(a&&a.length>0)return a}return e.zoneName()},Z:"ZZ",ZZ:"ZZ",ZZZ:"ZZ",ZZZZ:"ZZ",X:function(e){return e.format("Z").substr(0,3)},XX:"ZZ",XXX:"Z"},c=function(e){function t(){return i(this,t),T(this,u(t).apply(this,arguments))}var r,a,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(t,e),r=t,(a=[{key:"tokenize",value:function(e){for(var t=[],r=e.length,a=!1,i=0,o=null,T=null,u=function(e,r){var a=s[e];if(null===a)throw new Error("'".concat(e.repeat(r),"' cannot be converted to a moment format token; token is not implemented"));if(void 0===a)throw new Error("'".concat(e.repeat(r),"' cannot be converted to a moment format token; unknown token"));t.push(new n.Token(e,r))},m=function(e){t[t.length-1]instanceof n.Token?t.push(e):t[t.length-1]+=e},l=0;l<r;l++){var c=e.charAt(l);if("'"!==c)if(a)T+=c;else if(c.match(f)){if(void 0===s[c])throw new Error("Illegal pattern character '".concat(c,"'"));null!==o&&o!==c?(u(o,i),o=c,i=1):(o=c,i++)}else if(0!==i&&(u(o,i),o=null,i=0),c.charCodeAt(0)<128)m(c);else{var d=void 0;for(d=l+1;d<r;d++){var S=e.charAt(d);if("'"===S||S.match(f))break}for(;l<d;l++)m(e.charAt(l));l--}else{if(l+1<r&&"'"===(c=e.charAt(l+1))){l++,0!=i&&(u(o,i),o=null,i=0),a?T+=c:m(c);continue}a?(m(T),a=!1):(0!==i&&(u(o,i),o=null,i=0),T="",a=!0)}}if(a)throw new Error("Unterminated quote");return 0!=i&&u(o,i),t}},{key:"format",value:function(e,t){var r=this.tokenize(t),a=[],i=!0,o=!1,T=void 0;try{for(var u,m=r[Symbol.iterator]();!(i=(u=m.next()).done);i=!0){var f=u.value;if(f instanceof n.Token){var l=f.toString(),c=s[l];if(void 0===c)throw new Error("'".concat(l,"' cannot be converted to a moment format token; unknown token"));"function"==typeof c?a.push(c(e,l)):a.push(e.format(c))}else a.push(f)}}catch(e){o=!0,T=e}finally{try{i||null==m.return||m.return()}finally{if(o)throw T}}return a.join("")}}])&&o(r.prototype,a),l&&o(r,l),t}(n.Formatter);t.default=c},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.abbreviations=t.offsets=void 0;t.offsets={"-720":["AoE","Y"],"-660":["NUT","SST","X"],"-600":["HST","CKT","TAHT","W"],"-570":["MART"],"-540":["AKST","HDT","GAMT","V"],"-480":["PST","AKDT","U","PT"],"-420":["MST","PDT","T","MT","PT"],"-360":["CST","MDT","EAST","GALT","S","CT","MT"],"-300":["EST","CDT","ACT","CIST","COT","CST","EASST","ECT","PET","R","ET","CT"],"-240":["EDT","AST","AMT","BOT","CIDST","CLT","FKT","GYT","VET","Q","AT","ET"],"-210":["NST"],"-180":["UYT","ADT","AMST","ART","BRT","CLST","FKST","GFT","PMST","ROTT","SRT","UYT","WARST","WGT","P","AT"],"-150":["NDT"],"-120":["GST","BRST","FNT","GST","PMDT","UYST","WGST","O"],"-60":["CVT","AZOT","CVT","EGT","N"],0:["UTC","GMT","AZOST","EGST","WET","Z","WT"],60:["CET","BST","WAT","WEST","WST","A"],120:["CAT","CEST","EET","SAST","WAST","B"],180:["EAT","EEST","FET","MSK","SYOT","TRT","C"],210:["IRST"],240:["GET","AZT","KUYT","MSD","MUT","RET","SAMT","SCT","D"],270:["AFT","IRDT"],300:["UZT","AQTT","AZST","MAWT","MVT","ORAT","PKT","TFT","TJT","TMT","YEKT","E"],330:["IST"],345:["NPT"],360:["BTT","ALMT","BTT","IOT","KGT","OMST","QYZT","VOST","YEKST","F"],390:["MMT","CCT"],420:["ICT","CXT","DAVT","HOVT","KRAT","NOVST","NOVT","OMSST","WIB","G"],480:["HKT","AWST","BNT","CAST","CHOT","HOVST","IRKT","KRAST","MYT","PHT","SGT","ULAT","WITA","H"],510:["PYT"],525:["ACWST"],540:["JST","AWDT","CHOST","IRKST","KST","PWT","TLT","ULAST","WIT","YAKT","I"],570:["ACST","ACT"],600:["PGT","AEST","CHUT","ChST","DDUT","VLAT","YAKST","YAPT","K","AET"],630:["ACDT","LHST","ACT"],660:["VUT","AEDT","KOST","LHDT","MAGT","NCT","NFT","PONT","SAKT","SBT","SRET","VLAST","L","AET"],720:["FJT","ANAST","ANAT","GILT","MAGST","MHT","NFDT","NRT","NZST","PETST","PETT","TVT","WAKT","WFT","M"],765:["CHAST"],780:["TOT","FJST","NZDT","PHOT","TKT","TOT"],825:["CHADT"],840:["LINT","TOST","WST"]};var n={A:"Alpha Time Zone",ACDT:"Australian Central Daylight Time",ACST:"Australian Central Standard Time",ACT:"Australian Central Time",ACWST:"Australian Central Western Standard Time",ADT:"Atlantic Daylight Time",ADST:"Atlantic Daylight Saving Time",AEDT:"Australian Eastern Daylight Time",AEST:"Australian Eastern Standard Time",AET:"Australian Eastern Time",AFT:"Afghanistan Time",AKDT:"Alaska Daylight Time",AKST:"Alaska Standard Time",ALMT:"Alma-Ata Time",AMDT:"Armenia Daylight Time",AMST:"Amazon Summer Time",AMT:"Amazon Time",ANAST:"Anadyr Summer Time",ANAT:"Anadyr Time",AQTT:"Aqtobe Time",ART:"Argentina Time",AST:"Atlantic Standard Time",AT:"Atlantic Time",AWDT:"Australian Western Daylight Time",AWST:"Australian Western Standard Time",AZODT:"Azores Daylight Time",AZOST:"Azores Summer Time",AZOT:"Azores Time",AZST:"Azerbaijan Summer Time",AZT:"Azerbaijan Time",AoE:"Anywhere on Earth",B:"Bravo Time Zone",BDST:"British Daylight Saving Time",BDT:"Brunei Time",BNT:"Brunei Darussalam Time",BOT:"Bolivia Time",BRST:"Brasília Summer Time",BRT:"Brasília Time",BST:"British Summer Time",BT:"Brazil Time",BTT:"Bhutan Time",C:"Charlie Time Zone",CAST:"Casey Time",CAT:"Central Africa Time",CCT:"Cocos Islands Time",CDT:"Central Daylight Time",CDST:"Central Daylight Savings Time",CEDT:"Central European Daylight Time",CEST:"Central European Summer Time",CET:"Central European Time",CHADT:"Chatham Island Daylight Time",CHAST:"Chatham Island Standard Time",CHODT:"Choibalsan Daylight Time",CHODST:"Choibalsan Daylight Saving Time",CHOST:"Choibalsan Summer Time",CHOT:"Choibalsan Time",CHUT:"Chuuk Time",CIDST:"Cayman Islands Daylight Saving Time",CIST:"Cayman Islands Standard Time",CIT:"Cayman Islands Time",CKT:"Cook Island Time",CLDT:"Chile Daylight Time",CLST:"Chile Summer Time",CLT:"Chile Standard Time",COT:"Colombia Time",CST:"Central Standard Time",CT:"Central Time",CVT:"Cape Verde Time",CXT:"Christmas Island Time",ChST:"Chamorro Standard Time",D:"Delta Time Zone",DAVT:"Davis Time",DDUT:"Dumont-d'Urville Time",E:"Echo Time Zone",EADT:"Easter Island Daylight Time",EASST:"Easter Island Summer Time",EAST:"Easter Island Standard Time",EAT:"Eastern Africa Time",ECST:"European Central Summer Time",ECT:"Ecuador Time",EDT:"Eastern Daylight Time",EDST:"Eastern Daylight Saving Time",EEDT:"Eastern European Daylight Time",EEST:"Eastern European Summer Time",EET:"Eastern European Time",EFATE:"Efate Time",EGST:"Eastern Greenland Summer Time",EGT:"East Greenland Time",EST:"Eastern Standard Time",ET:"Eastern Time",F:"Foxtrot Time Zone",FET:"Further-Eastern European Time",FJDT:"Fiji Daylight Time",FJST:"Fiji Summer Time",FJT:"Fiji Time",FKDT:"Falkland Island Daylight Time",FKST:"Falkland Islands Summer Time",FKT:"Falkland Island Time",FNT:"Fernando de Noronha Time",G:"Golf Time Zone",GALT:"Galapagos Time",GAMT:"Gambier Time",GET:"Georgia Standard Time",GFT:"French Guiana Time",GILT:"Gilbert Island Time",GMT:"Greenwich Mean Time",GST:"South Georgia Time",GT:"Greenwich Time",GYT:"Guyana Time",H:"Hotel Time Zone",HAA:"Heure Avancée de l'Atlantique",HAC:"Heure Avancée du Centre",HADT:"Hawaii Daylight Time",HAE:"Heure Avancée de l'Est",HAP:"Heure Avancée du Pacifique",HAST:"Hawaii-Aleutian Standard Time",HAR:"Heure Avancée des Rocheuses",HAT:"Heure Avancée de Terre-Neuve",HDT:"Hawaii-Aleutian Daylight Time",HLV:"Hora Legal de Venezuela",HNA:"Heure Normale de l'Atlantique",HNC:"Heure Normale du Centre",HNE:"Heure Normale de l'Est",HNP:"Heure Normale du Pacifique",HNR:"Heure Normale des Rocheuses",HNT:"Heure Normale de Terre-Neuve",HKT:"Hong Kong Time",HOVDT:"Hovd Daylight Time",HOVDST:"Hovd Daylight Saving Time",HOVST:"Hovd Summer Time",HOVT:"Hovd Time",HST:"Hawaii Standard Time",I:"India Time Zone",ICT:"Indochina Time",IDT:"Israel Daylight Time",IOT:"Indian Chagos Time",IRDT:"Iran Daylight Time",IRKST:"Irkutsk Summer Time",IRKT:"Irkutsk Time",IRST:"Iran Standard Time",IST:"India Standard Time",JST:"Japan Standard Time",K:"Kilo Time Zone",KGT:"Kyrgyzstan Time",KIT:"Kerguelen (Islands) Time",KOST:"Kosrae Time",KRAST:"Krasnoyarsk Summer Time",KRAT:"Krasnoyarsk Time",KST:"Korea Standard Time",KT:"Korea Time",KUYT:"Kuybyshev Time",L:"Lima Time Zone",LHDT:"Lord Howe Daylight Time",LHST:"Lord Howe Standard Time",LINT:"Line Islands Time",M:"Mike Time Zone",MAGST:"Magadan Summer Time",MAGT:"Magadan Time",MART:"Marquesas Time",MAWT:"Mawson Time",MCK:"Moscow Time",MDST:"Mountain Daylight Saving Time",MDT:"Mountain Daylight Time",MESZ:"Mitteleuropäische Sommerzeit",MEZ:"Mitteleuropäische Zeit",MHT:"Marshall Islands Time",MMT:"Myanmar Time",MST:"Mountain Standard Time",MSK:"Moscow Standard Time",MT:"Mountain Time",MUT:"Mauritius Time",MVT:"Maldives Time",MYT:"Malaysia Time",N:"November Time Zone",NACDT:"North American Central Daylight Time",NACST:"North American Central Standard Time",NAEDT:"North American Eastern Daylight Time",NAEST:"North American Eastern Standard Time",NAMDT:"North American Mountain Daylight Time",NAMST:"North American Mountain Standard Time",NAPDT:"North American Pacific Daylight Time",NAPST:"North American Pacific Standard Time",NCT:"New Caledonia Time",NDT:"Newfoundland Daylight Time",NFDT:"Norfolk Daylight Time",NFT:"Norfolk Time",NOVST:"Novosibirsk Summer Time",NOVT:"Novosibirsk Time",NPT:"Nepal Time",NRT:"Nauru Time",NST:"Newfoundland Standard Time",NUT:"Niue Time",NZDT:"New Zealand Daylight Time",NZST:"New Zealand Standard Time",O:"Oscar Time Zone",OESZ:"Osteuropäische Sommerzeit",OEZ:"Osteuropäische Zeit",OMSST:"Omsk Summer Time",OMST:"Omsk Standard Time",ORAT:"Oral Time",P:"Papa Time Zone",PDT:"Pacific Daylight Time",PDST:"Pacific Daylight Saving Time",PET:"Peru Time",PETST:"Kamchatka Summer Time",PETT:"Kamchatka Time",PGT:"Papua New Guinea Time",PHOT:"Phoenix Island Time",PHT:"Philippine Time",PKT:"Pakistan Standard Time",PMDT:"Pierre & Miquelon Daylight Time",PMST:"Pierre & Miquelon Standard Time",PONT:"Pohnpei Standard Time",PST:"Pacific Standard Time",PT:"Pacific Time",PWT:"Palau Time",PYST:"Pyongyang Standard Time",PYT:"Pyongyang Time",Q:"Quebec Time Zone",QYZT:"Qyzylorda Time",R:"Romeo Time Zone",RET:"Reunion Time",ROTT:"Rothera Time",S:"Sierra Time Zone",SAKT:"Sakhalin Time",SAMT:"Samara Time",SAMST:"Samara Summer Time",SAST:"South Africa Standard Time",SBT:"Solomon Islands Time",SCT:"Seychelles Time",SGT:"Singapore Time",SRET:"Srednekolymsk Time",SRT:"Suriname Time",SST:"Samoa Standard Time",SYOT:"Syowa Time",T:"Tango Time Zone",TAHT:"Tahiti Time",TFT:"French Southern and Antarctic Time",TJT:"Tajikistan Time",TKT:"Tokelau Time",TLT:"East Timor Time",TMT:"Turkmenistan Time",TOST:"Tonga Summer Time",TOT:"Tonga Time",TRT:"Turkey Time",tVT:"Tuvalu Time",U:"Uniform Time Zone",ULAST:"Ulaanbaatar Summer Time",ULAT:"Ulaanbaatar Time",UTC:"Coordinated Universal Time",UYST:"Uruguay Summer Time",UYT:"Uruguay Time",UZT:"Uzbekistan Time",V:"Victor Time Zone",VET:"Venezuelan Standard Time",VLAST:"Vladivostok Summer Time",VLAT:"Vladivostok Time",VOST:"Vostok Time",VUT:"Vanuatu Time",W:"Whiskey Time Zone",WAKT:"Wake Time",WARST:"Western Argentine Summer Time",WAST:"West Africa Summer Time",WAT:"West Africa Time",WDT:"Western Daylight Time",WEDT:"Western European Daylight Time",WEST:"Western European Summer Time",WESZ:"Westeuropäische Sommerzeit",WET:"Western European Time",WEZ:"Westeuropäische Zeit",WFT:"Wallis and Futuna Time",WGST:"Western Greenland Summer Time",WGT:"West Greenland Time",WIB:"Western Indonesian Time",WIT:"Eastern Indonesian Time",WITA:"Central Indonesian Time",WST:"Western Standard Time",WT:"Western Sahara Standard Time",X:"X-ray Time Zone",Y:"Yankee Time Zone",YAKST:"Yakutsk Summer Time",YAKT:"Yakutsk Time",YAPT:"Yap Time",YEKST:"Yekaterinburg Summer Time",YEKT:"Yekaterinburg Time",Z:"Zulu Time Zone"};t.abbreviations=n;var a=n;t.default=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.PaddedToken=void 0;var n=r(0);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function T(e,t,r){return t&&o(e.prototype,t),r&&o(e,r),e}function u(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?f(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var d=/[A-Za-z]/,S=function(e){return e.year()>0?"AD":"BC"},h=function(e){return 0===e.utcOffset()?"Z":e.format("ZZ")},A={G:S,GG:S,GGG:S,GGGG:function(e){return e.year()>0?"Anno Domini":"Before Christ"},u:function(e){return(0,n.zeroPad)(e.format("YYYY"),1)},uu:function(e){return(0,n.zeroPad)((0,n.toAbsString)(e.format("YY")),2)},uuu:function(e){return(0,n.zeroPad)(e.format("YYYY"),3)},uuuu:"YYYY",y:function(e){return(0,n.toAbsString)(e.format("Y"))},yy:function(e){return(0,n.toAbsString)(e.format("YY"))},yyy:function(e){return(0,n.zeroPad)((0,n.toAbsString)(e.format("YYYY")),3)},yyyy:function(e){return(0,n.toAbsString)(e.format("YYYY"))},D:"DDD",DD:function(e){var t=e.format("DDD");if(t.length>2)throw new Error("Field DayOfYear cannot be printed as the value "+t+" exceeds the maximum print width of 2");return(0,n.zeroPad)(t,2)},DDD:"DDDD",M:"M",MM:"MM",MMM:"MMM",MMMM:"MMMM",L:"M",LL:"MM",LLL:"M",LLLL:"M",d:"D",dd:"DD",Q:"Q",QQ:function(e){return(0,n.zeroPad)(e.format("Q"),2)},QQQ:function(e){return"Q"+e.format("Q")},QQQQ:function(e){return e.format("Qo")+" quarter"},q:"Q",qq:function(e){return(0,n.zeroPad)(e.format("Q"),2)},qqq:"Q",qqqq:"Q",Y:function(e){return(0,n.zeroPad)(e.format("gggg"),1)},YY:"gg",YYY:function(e){return(0,n.zeroPad)(e.format("gggg"),3)},YYYY:"gggg",w:"w",ww:"ww",E:"ddd",EE:"ddd",EEE:"ddd",EEEE:"dddd",e:"d",ee:function(e){return(0,n.zeroPad)(e.format("d"),2)},eee:"ddd",eeee:"dddd",c:"d",ccc:"ddd",cccc:"dddd",a:"A",h:"h",hh:"hh",K:function(e){return(0,n.toAbsString)(e.hour()%12)},KK:function(e){var t=(0,n.toAbsString)(e.hour()%12);return(0,n.zeroPad)(t,2)},k:"k",kk:"kk",H:"H",HH:"HH",m:"m",mm:"mm",s:"s",ss:"ss",S:"S",SS:"SS",SSS:"SSS",SSSS:"SSSS",A:function(e){return(0,n.zeroPad)(e.valueOf()-e.clone().startOf("day").valueOf(),1)},AA:function(e){return e.isSame(e.clone().startOf("day"))?(console.log(e.format()+" is the same as "+e.clone().startOf("day").format()),"00"):null},AAA:function(e){return e.isSame(e.clone().startOf("day"))?"000":null},AAAA:function(e){return e.isSame(e.clone().startOf("day"))?"0000":null},VV:function(e){var t=e.tz();return t||e.format("Z")},z:"z",zz:"z",zzz:"z",zzzz:"zz",O:function(e){var t=e.utcOffset()/60,r=Math.floor(t);if(Number.isInteger(t))return t<0?"UTC-"+(0,n.toAbsString)(r):"UTC+"+r;var a=(0,n.toAbsString)(e.utcOffset()%60);return"UTC-"+(0,n.toAbsString)(r)+":"+(0,n.zeroPad)(a,2)},OOOO:function(e){var t=e.utcOffset()/60,r=Math.floor(t);if(Number.isInteger(t))return t<0?"UTC-"+(0,n.zeroPad)((0,n.toAbsString)(r),2)+":00":"UTC+"+(0,n.zeroPad)(r,2)+":00";var a=(0,n.toAbsString)(e.utcOffset()%60);return"UTC-"+(0,n.zeroPad)((0,n.toAbsString)(r),2)+":"+(0,n.zeroPad)(a,2)},X:h,XX:h,XXX:h,XXXX:h,x:function(e){return e.format("Z").substr(0,3)},xx:"ZZ",xxx:"Z",xxxx:"ZZ",Z:"ZZ",ZZ:"ZZ",ZZZ:"ZZ",ZZZZ:function(e){return"UTC"+e.format("Z")}},g=function(e){function t(e,r,n,a){var o;return i(this,t),c(f(o=u(this,m(t).call(this,n,a))),"padding",void 0),c(f(o),"padChar",void 0),o.padding=e,o.padChar=r,o}return l(t,e),T(t,[{key:"format",value:function(e){if(e.length>this.padding)throw new Error('Cannot format padding as formatted string "'.concat(e,'" exceeds pad width of ').concat(this.padding,"."));return(this.padChar.repeat(this.padding)+e).substr(0-this.padding)}}]),t}(n.Token);t.PaddedToken=g;var y=function(e){function t(){return i(this,t),u(this,m(t).apply(this,arguments))}return l(t,e),T(t,[{key:"tokenize",value:function(e){for(var t=0,r=" ",a=[],i=0;i<e.length;i++){var o=e.charAt(i);if(o.match(d)){for(var T=i++;i<e.length&&e.charAt(i)===o;i++);var u=i-T;if("p"===o){var m=0;if(i<e.length&&(o=e.charAt(i)).match(d)){for(m=u,T=i++;i<e.length&&e.charAt(i)===o;i++);u=i-T}if(0===m)throw new Error("Pad letter 'p' must be followed by valid pad pattern: "+e);t=m,r=" "}if(!A[o.repeat(u)])throw new Error("Unknown pattern letter: ".concat(o));t>0?(a.push(new g(t,r,o,u)),t=0,r=" "):a.push(new n.Token(o,u)),i--}else if("'"===o){for(var f=i++;i<e.length;i++)if("'"===e.charAt(i)){if(!(i+1<e.length&&"'"===e.charAt(i+1)))break;i++}if(i>=e.length)throw new Error("Pattern ends with an incomplete string literal: ".concat(e));var l=e.substring(f+1,i);0==l.length?a.push("'"):a.push(l.replace("''","'"))}else{if("["===o)throw new Error("Optional patterns are not supported: ".concat(o));if("]"===o)throw new Error("Optional patterns are not supported: ".concat(o));if("{"===o||"}"===o||"#"===o)throw new Error("Pattern includes reserved character: '".concat(o,"'"));a[a.length-1]instanceof n.Token?a.push(o):a[a.length-1]+=o}}return a}},{key:"format",value:function(e,t){var r=this.tokenize(t),a=[],i=!0,o=!1,T=void 0;try{for(var u,m=r[Symbol.iterator]();!(i=(u=m.next()).done);i=!0){var f=u.value;if(f instanceof n.Token){var l,s=f.toString(),c=A[s];if(void 0===c)throw new Error("'".concat(s,"' cannot be converted to a moment format token; bailing"));if("function"==typeof c){var d=c(e,s);if(null===d)throw new Error("'".concat(s,"' cannot be converted to a moment format token; bailing"));a.push(d)}else a.push(e.format(c))}else a.push(f)}}catch(l){o=!0,T=l}finally{try{i||null==m.return||m.return()}finally{if(o)throw T}}return a.join("")}}]),t}(n.Formatter);t.default=y},function(t,r){t.exports=e}])}));